// SPDX-License-Identifier: MIT
pragma solidity >=0.8.8;

import { IEarnStrategy } from "@balmy/earn-core/interfaces/IEarnStrategy.sol";
import { IDelayedWithdrawalAdapter } from "./IDelayedWithdrawalAdapter.sol";

/// @notice Interface for Earn strategies that support delayed withdrawals
interface IEarnBalmyStrategy is IEarnStrategy {
  /**
   * @notice Returns the "delayed withdrawal" adapter that will be used for the given token
   * @param token The token to use the adapter for
   * @return The address of the "delayed withdrawal" adapter, or the zero address if none is configured
   */
  function delayedWithdrawalAdapter(address token) external view returns (IDelayedWithdrawalAdapter);

  /**
   * @notice Returns a yield coefficient that, when calculated over time, describes how much yield was
   *         generated by the strategy
   * @return coefficient The yield coefficient
   * @return multiplier The multiplier used for the coefficient
   */
  function assetYieldCoefficient() external view returns (uint256 coefficient, uint256 multiplier);

  /**
   * @notice Returns the rewards emitted per second for each reward token. This value represents how many
   *         reward tokens are emitted per deposited asset
   * @return emissions The rewards emitted per second for each reward token
   * @return multipliers The multiplier used for each emission value
   */
  function rewardEmissionsPerSecondPerAsset()
    external
    view
    returns (uint256[] memory emissions, uint256[] memory multipliers);
}
